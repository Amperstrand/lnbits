name: Test2 JMeter Action

on:
  workflow_call:
    inputs:
      python-version:
        description: "Python Version"
        required: true
        default: "3.9"
        type: string
      poetry-version:
        description: "Poetry Version"
        required: true
        default: "1.5.1"
        type: string

jobs:
  action_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
          cache: "pip"

      - name: Set up Poetry ${{ inputs.poetry-version }}
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ inputs.poetry-version }}

      - name: create logs and reports dir
        run: |
          mkdir logs
          mkdir reports

      - name: install packages
        run: poetry install

      - name: run LNbits
        env:
          LNBITS_EXTENSIONS_DEFAULT_INSTALL: "watchonly, satspay, tipjar"
          LNBITS_BACKEND_WALLET_CLASS: FakeWallet
        run: |
          poetry run lnbits > logs/lnbits.log &
          sleep 10

      - name: install jmeter
        run: |
          java -version
          wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.5.zip
          unzip apache-jmeter-5.5.zip
          cd apache-jmeter-5.5/bin
          ./jmeter -v
          pwd

      - name: topup wallet
        run: |
          superuser=$(poetry run lnbits-cli superuser)
          echo "Superuser: '$superuser'"
          wallet=$(curl --location 'http://localhost:5000/api/v1/account' --header 'Content-Type: application/json' --data '{ "name": "jmeter money user"}')
          echo "New user wallet: '$wallet'"
          wallet_id=$(echo $wallet | jq -r .id)
          user_id=$(echo $wallet | jq -r .user)
          adminkey=$(echo $wallet | jq -r .adminkey)
          echo "Wallet ID: $wallet_id"
          echo "User ID: $user_id"
          echo "Adminkey: $adminkey"

          curl --location --request PUT http://localhost:5000/admin/api/v1/topup/?usr=$superuser --header 'Content-Type: application/json' --data '{ "id": "'$wallet_id'", "amount": 2100000000}'

      - name: run jmx scripts
        run: |
          echo "111Wallet ID: $wallet_id"
          echo "111User ID: $user_id"
          echo "111Adminkey: $adminkey"
          for file in $( ls $GITHUB_WORKSPACE/integration/*.jmx); do
            echo "Running test with $file"
            filename=$(basename "$file" ".jmx")
            $GITHUB_WORKSPACE/apache-jmeter-5.5/bin/jmeter -n -t $file -l logs/$filename.log -e -o reports;
            error_count=$(cat jmeter.log | grep "summary =" | awk '{print $19}')
            echo "Error count: $error_count"
            if [ "$error_count" != "0" ]
            then
              echo "Test $filename failed. Error count: $error_count."
              cat logs/$filename.log
              exit 1
            else
              echo "Test $filename OK."
            fi
          done

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: jmeter-test-results
          path: |
            reports/
            logs/
